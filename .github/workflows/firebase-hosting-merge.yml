name: CI/CD Pipeline - Administrador de Tareas
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del c칩digo
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. Instalar dependencias
      - name: Install dependencies
        run: npm ci
      
      # 4. Ejecutar linter (buenas pr치cticas)
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      # 5. Ejecutar pruebas unitarias
      - name: Run unit tests
        run: npm run test:ci
      
      # 6. Verificar formato de c칩digo
      - name: Check code formatting
        run: npm run format:check
        continue-on-error: true
      
      # 7. Build del proyecto
      - name: Build project
        run: npm run build:prod

      - name: Verify build output
        run: |
          echo "Verificando archivos generados:"
          ls -la dist/
          ls -la dist/essentials/
          echo "Contenido de dist/essentials/:"
          ls -la dist/essentials/
          echo "Verificando index.html:"
          cat dist/essentials/index.html | head -10
          echo "Verificaci칩n completa"
      
      # 8. Deploy a Firebase (solo en push a main)
      - name: Deploy to Firebase Hosting
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AT_TP7_DA9D9 }}
          channelId: live
          projectId: at-tp7-da9d9
